apiVersion: v1 
kind: Service 
metadata: 
  name: nginx
spec: 
  type: LoadBalancer
  selector: 
    app: pv-lb
  ports: 
  - port: 80 
    name: http
    protocol: TCP
    targetPort: 5000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  labels:
    app: minimal-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: my.test.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: pv-lb
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: heketi-pvc 
 annotations:
   volume.beta.kubernetes.io/storage-class: heketi  
spec:
 accessModes:
  - ReadWriteMany
 resources:
   requests:
     storage: 4Gi

---
apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: nginx-deployment 
spec:
  selector: 
    matchLabels: 
      app: pv-lb 
  replicas: 3
  template: 
    metadata: 
      labels: 
        app: pv-lb 
    spec: 
      volumes:
      - name: lb-pvc-volume
        persistentVolumeClaim:
                claimName: heketi-pvc 
      containers: 
      - name: python-hostname
        image: suicidesky92/pythontest:latest
        ports: 
        - containerPort: 5000
        volumeMounts:
        - name: lb-pvc-volume
          mountPath: /usr/share/nginx/html
